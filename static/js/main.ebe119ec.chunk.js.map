{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","App.jsx","index.js","components/ContactForm/ContactForm.module.scss","components/Phonebook/Phonebook.module.scss"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","e","preventDefault","className","s","form","label","type","pattern","title","required","value","onChange","target","btn","ContactList","contacts","handleDel","contactList","map","contact","contactItem","contactText","delBtn","onClick","id","icon","Filter","filter","Phonebook","setContacts","setFilter","useEffect","contactsLS","JSON","parse","localStorage","getItem","setItem","stringify","isInclude","length","some","toLowerCase","phonebook","featuresWrap","addContact","alert","prev","shortid","generate","includes","getFilteredContacts","contactId","delIdx","findIndex","prevCopy","splice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebe119ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__F9p5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__aX_dC\",\"contactItem\":\"ContactList_contactItem__ZDl-h\",\"contactText\":\"ContactList_contactText__3_OYh\",\"delBtn\":\"ContactList_delBtn__pWZEL\",\"icon\":\"ContactList_icon__12NSG\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./ContactForm.module.scss\";\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n  const handleNumberChange = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const clearForm = () => {\n    setNumber(\"\");\n    setName(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n\n    clearForm();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        <p className=\"labelText\">Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleNameChange}\n        />\n      </label>\n      <label className={s.label}>\n        <p className=\"labelText\">Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleNumberChange}\n        />\n      </label>\n\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\nexport { ContactForm };\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import s from \"./ContactList.module.scss\";\nimport PropTypes from \"prop-types\";\nimport { TiDelete } from \"react-icons/ti\";\n\nexport function ContactList({ contacts, handleDel }) {\n  return (\n    <div className=\"contacts\">\n      <ul className={s.contactList}>\n        {contacts &&\n          contacts.map((contact) => (\n            <li key={contact.id} className={s.contactItem}>\n              <p className={s.contactText}>\n                {contact.name}: {contact.number}\n              </p>\n              <button\n                className={s.delBtn}\n                onClick={() => {\n                  handleDel(contact.id);\n                }}\n              >\n                <TiDelete className={s.icon} />\n              </button>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  handleDel: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.scss\";\n\nexport function Filter({ filter, onChange }) {\n  return (\n    <label className={s.Filter}>\n      <p className=\"labelText\">Find contacts by name</p>\n      <input\n        type=\"text\"\n        className=\"search\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n","import s from \"./Phonebook.module.scss\";\nimport { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport { ContactForm } from \"../ContactForm/ContactForm\";\nimport { ContactList } from \"../ContactList/ContactList\";\nimport { Filter } from \"../Filter/Filter\";\n\nexport function Phonebook() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contactsLS = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (contactsLS) {\n      setContacts(contactsLS);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleSubmit = ({ name, number }) => {\n    if (isInclude(name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    setContacts((prev) => [\n      ...prev,\n      {\n        id: shortid.generate(),\n        name,\n        number,\n      },\n    ]);\n  };\n\n  const contactFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const getFilteredContacts = () => {\n    if (contacts.length > 0) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  const isInclude = (name) => {\n    if (contacts.length > 0) {\n      return contacts.some(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      );\n    }\n  };\n\n  const deleteContact = (contactId) => {\n    const delIdx = contacts.findIndex((contact) => {\n      return contact.id === contactId;\n    });\n\n    setContacts((prev) => {\n      const prevCopy = [...prev];\n      prevCopy.splice(delIdx, 1);\n\n      return prevCopy;\n    });\n  };\n\n  return (\n    <section className={s.phonebook}>\n      <h1>Phonebook</h1>\n      <div className={s.featuresWrap}>\n        <div className={s.addContact}>\n          <h2>Add new contact</h2>\n          <ContactForm onSubmit={handleSubmit} />\n        </div>\n        <div>\n          <h2>Contacts</h2>\n          <Filter filter={filter} onChange={contactFilter} />\n          <ContactList\n            contacts={getFilteredContacts()}\n            handleDel={deleteContact}\n          />\n        </div>\n      </div>\n    </section>\n  );\n}\n","import \"./App.css\";\nimport { Phonebook } from \"./components/Phonebook/Phonebook\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1DUPA\",\"label\":\"ContactForm_label__2Mtit\",\"btn\":\"ContactForm_btn__2U3W6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"Phonebook_phonebook__32o2q\",\"featuresWrap\":\"Phonebook_featuresWrap__4Xfoa\",\"addContact\":\"Phonebook_addContact__2VTOO\"};"],"sourceRoot":""}